<?php echo '<?xml version=\'1.0\' encoding=\'UTF-8\'?>' . "\n"; ?>
<project>
  <actions/>
  <description><?php echo htmlentities($description); ?></description>
  <logRotator>
    <daysToKeep>5</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rm -rf ${WORKSPACE}/*.tgz ${WORKSPACE}/*.spec ${WORKSPACE}/*.src.rpm
php -d include_path=&quot;.:${WORKSPACE}/../../<?php echo $toolsdir; ?>/php&quot; ${WORKSPACE}/../../<?php echo $toolsdir; ?>/horde-components -t ../../../../templates --pearrc ${WORKSPACE}/../../<?php echo $toolsdir; ?>/../.pearrc -t ${WORKSPACE}/../../../../templates/openpkg -D ${WORKSPACE} -N ${WORKSPACE}/../../horde-git/workspace/<?php echo $sourcepath . "\n"; ?>
mkdir -p /kolab/RPM/SRC/@NAME@
rsync -avz --delete-after ${WORKSPACE}/ /kolab/RPM/SRC/@NAME@/
mv ${WORKSPACE}/../*.tgz /kolab/RPM/SRC/@NAME@/
if [ &quot;`/kolab/bin/openpkg rpm -q @NAME@`&quot; != &quot;package @NAME@ is not installed&quot; ]; then for pkg in `/kolab/bin/openpkg rpm -q @NAME@`;do echo $pkg; /kolab/bin/openpkg rpm --nodeps -e $pkg;done;fi
/kolab/bin/openpkg rpm -ba @NAME@.spec
/kolab/bin/openpkg rpm -Uhv --force /kolab/RPM/PKG/@NAME@-*.`/kolab/bin/openpkg rpm -q --qf=&quot;&#37;{ARCH}-&#37;{OS}&quot; openpkg`-kolab.rpm
cp /kolab/RPM/PKG/@NAME@-*.src.rpm ${WORKSPACE}/
rm -rf /kolab/RPM/PKG/@NAME@-*
rm -rf /kolab/RPM/SRC/@NAME@*
rm -rf /kolab/RPM/TMP/*
    </command>
    </hudson.tasks.Shell>
    <!--<hudson.tasks.Ant>
      <targets></targets>
    </hudson.tasks.Ant>-->
  </builders>
  <publishers>
    <hudson.tasks.Mailer>
      <recipients>wrobel@pardus.de</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>
